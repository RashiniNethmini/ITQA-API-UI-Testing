[
  {
    "description": "",
    "elements": [
      {
        "description": "",
        "id": "delete-a-book;attempt-to-delete-a-book-with-an-existing-id-as-admin",
        "keyword": "Scenario",
        "line": 5,
        "name": "Attempt to DELETE a book with an existing ID as admin",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 6,
            "name": "a random book is created",
            "match": {
              "location": "src\\tests\\steps\\deleteBook.steps.ts:14"
            },
            "result": {
              "status": "passed",
              "duration": 99998799
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 7,
            "name": "I am an authenticated DELETE admin API client",
            "match": {
              "location": "src\\tests\\steps\\deleteBook.steps.ts:20"
            },
            "result": {
              "status": "passed",
              "duration": 1678100
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 8,
            "name": "I send a DELETE request with an existing book ID",
            "match": {
              "location": "src\\tests\\steps\\deleteBook.steps.ts:30"
            },
            "result": {
              "status": "passed",
              "duration": 68188799
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 9,
            "name": "the response status of DELETE should be 200",
            "match": {
              "location": "src\\tests\\steps\\deleteBook.steps.ts:40"
            },
            "result": {
              "status": "failed",
              "duration": 2058799,
              "error_message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at Proxy.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\node_modules\\playwright\\lib\\matchers\\expect.js:227:37)\n    at validateResponseStatus (D:\\ITQA-API-UI-Testing\\api-testing\\src\\requests\\ValidateResponseStatus.ts:10:28)\n    at World.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\src\\tests\\steps\\deleteBook.steps.ts:41:33)"
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "delete-a-book;attempt-to-delete-a-book-with-an-existing-id-as-user",
        "keyword": "Scenario",
        "line": 11,
        "name": "Attempt to DELETE a book with an existing ID as user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 12,
            "name": "a random book is created",
            "match": {
              "location": "src\\tests\\steps\\deleteBook.steps.ts:14"
            },
            "result": {
              "status": "passed",
              "duration": 72806100
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 13,
            "name": "I am an authenticated DELETE user API client",
            "match": {
              "location": "src\\tests\\steps\\deleteBook.steps.ts:25"
            },
            "result": {
              "status": "passed",
              "duration": 1516399
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 14,
            "name": "I send a DELETE request with an existing book ID",
            "match": {
              "location": "src\\tests\\steps\\deleteBook.steps.ts:30"
            },
            "result": {
              "status": "passed",
              "duration": 68532200
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 15,
            "name": "the response status of DELETE should be 403",
            "match": {
              "location": "src\\tests\\steps\\deleteBook.steps.ts:40"
            },
            "result": {
              "status": "failed",
              "duration": 521799,
              "error_message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m403\u001b[39m\nReceived: \u001b[31m200\u001b[39m\n    at Proxy.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\node_modules\\playwright\\lib\\matchers\\expect.js:227:37)\n    at validateResponseStatus (D:\\ITQA-API-UI-Testing\\api-testing\\src\\requests\\ValidateResponseStatus.ts:10:28)\n    at World.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\src\\tests\\steps\\deleteBook.steps.ts:41:33)"
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 16,
            "name": "the response should contain an error message \"User is not permitted.\"",
            "match": {
              "location": "src\\tests\\steps\\deleteBook.steps.ts:44"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "delete-a-book;attempt-to-delete-a-book-with-a-non-existing-id-as-admin",
        "keyword": "Scenario",
        "line": 22,
        "name": "Attempt to DELETE a book with a non-existing ID as admin",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 23,
            "name": "I am an authenticated DELETE admin API client",
            "match": {
              "location": "src\\tests\\steps\\deleteBook.steps.ts:20"
            },
            "result": {
              "status": "passed",
              "duration": 4051699
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 24,
            "name": "I send a DELETE request with a non-existing book ID",
            "match": {
              "location": "src\\tests\\steps\\deleteBook.steps.ts:35"
            },
            "result": {
              "status": "passed",
              "duration": 64863599
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 25,
            "name": "the response status of DELETE should be 404",
            "match": {
              "location": "src\\tests\\steps\\deleteBook.steps.ts:40"
            },
            "result": {
              "status": "failed",
              "duration": 575699,
              "error_message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at Proxy.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\node_modules\\playwright\\lib\\matchers\\expect.js:227:37)\n    at validateResponseStatus (D:\\ITQA-API-UI-Testing\\api-testing\\src\\requests\\ValidateResponseStatus.ts:10:28)\n    at World.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\src\\tests\\steps\\deleteBook.steps.ts:41:33)"
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "delete-a-book;attempt-to-delete-a-book-with-a-non-existing-id-as-user",
        "keyword": "Scenario",
        "line": 27,
        "name": "Attempt to DELETE a book with a non-existing ID as user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 28,
            "name": "I am an authenticated DELETE user API client",
            "match": {
              "location": "src\\tests\\steps\\deleteBook.steps.ts:25"
            },
            "result": {
              "status": "passed",
              "duration": 937899
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 29,
            "name": "I send a DELETE request with a non-existing book ID",
            "match": {
              "location": "src\\tests\\steps\\deleteBook.steps.ts:35"
            },
            "result": {
              "status": "passed",
              "duration": 67387200
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 30,
            "name": "the response status of DELETE should be 403",
            "match": {
              "location": "src\\tests\\steps\\deleteBook.steps.ts:40"
            },
            "result": {
              "status": "failed",
              "duration": 549300,
              "error_message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m403\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Proxy.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\node_modules\\playwright\\lib\\matchers\\expect.js:227:37)\n    at validateResponseStatus (D:\\ITQA-API-UI-Testing\\api-testing\\src\\requests\\ValidateResponseStatus.ts:10:28)\n    at World.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\src\\tests\\steps\\deleteBook.steps.ts:41:33)"
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 31,
            "name": "the response should contain an error message \"User is not permitted.\"",
            "match": {
              "location": "src\\tests\\steps\\deleteBook.steps.ts:44"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      }
    ],
    "id": "delete-a-book",
    "line": 1,
    "keyword": "Feature",
    "name": "Delete a book",
    "tags": [],
    "uri": "src\\tests\\features\\deleteBook.feature"
  },
  {
    "description": "",
    "elements": [
      {
        "description": "",
        "id": "get-books;attempt-to-get-all-books-as-admin",
        "keyword": "Scenario",
        "line": 5,
        "name": "Attempt to GET all books as admin",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 6,
            "name": "there is a book entry in the system",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:19"
            },
            "result": {
              "status": "passed",
              "duration": 70326399
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 7,
            "name": "I am an authenticated admin API client",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:31"
            },
            "result": {
              "status": "passed",
              "duration": 1080699
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 8,
            "name": "I send a GET request to the \"books\" endpoint",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:49"
            },
            "result": {
              "status": "passed",
              "duration": 67317300
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 9,
            "name": "the response status should be 200",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:71"
            },
            "result": {
              "status": "passed",
              "duration": 379100
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 10,
            "name": "the response should contain a list of books",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:76"
            },
            "result": {
              "status": "passed",
              "duration": 2122899
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "get-books;attempt-to-get-all-books-as-user",
        "keyword": "Scenario",
        "line": 13,
        "name": "Attempt to GET all books as user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 14,
            "name": "there is a book entry in the system",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:19"
            },
            "result": {
              "status": "passed",
              "duration": 69633200
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "I am an authenticated user API client",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:37"
            },
            "result": {
              "status": "passed",
              "duration": 1055499
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 16,
            "name": "I send a GET request to the \"books\" endpoint",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:49"
            },
            "result": {
              "status": "passed",
              "duration": 70349799
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 17,
            "name": "the response status should be 200",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:71"
            },
            "result": {
              "status": "passed",
              "duration": 479100
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 18,
            "name": "the response should contain a list of books",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:76"
            },
            "result": {
              "status": "passed",
              "duration": 2036000
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "get-books;attempt-to-get-a-book-with-non-existing-id-as-admin",
        "keyword": "Scenario",
        "line": 22,
        "name": "Attempt to GET a book with non-existing ID as admin",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 23,
            "name": "there is a book entry in the system",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:19"
            },
            "result": {
              "status": "passed",
              "duration": 68088299
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 24,
            "name": "I am an authenticated admin API client",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:31"
            },
            "result": {
              "status": "passed",
              "duration": 858700
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 25,
            "name": "I send a GET request to the \"books/100000\" endpoint with a non-existing ID",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:57"
            },
            "result": {
              "status": "passed",
              "duration": 65341600
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 26,
            "name": "the response status should be 404",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:71"
            },
            "result": {
              "status": "passed",
              "duration": 328400
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "get-books;attempt-to-get-a-book-with-non-existing-id-as-user",
        "keyword": "Scenario",
        "line": 28,
        "name": "Attempt to GET a book with non-existing ID as user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 29,
            "name": "there is a book entry in the system",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:19"
            },
            "result": {
              "status": "passed",
              "duration": 67057099
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 30,
            "name": "I am an authenticated user API client",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:37"
            },
            "result": {
              "status": "passed",
              "duration": 840599
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 31,
            "name": "I send a GET request to the \"books/100000\" endpoint with a non-existing ID",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:57"
            },
            "result": {
              "status": "passed",
              "duration": 64201900
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 32,
            "name": "the response status should be 404",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:71"
            },
            "result": {
              "status": "failed",
              "duration": 918299,
              "error_message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m404\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at Proxy.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\node_modules\\playwright\\lib\\matchers\\expect.js:227:37)\n    at validateResponseStatus (D:\\ITQA-API-UI-Testing\\api-testing\\src\\requests\\ValidateResponseStatus.ts:10:28)\n    at World.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\src\\tests\\steps\\getBooks.steps.ts:72:33)"
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "get-books;attempt-to-get-a-book-with-existing-id-as-admin",
        "keyword": "Scenario",
        "line": 37,
        "name": "Attempt to GET a book with existing ID as admin",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 38,
            "name": "I create a new book with a random title",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:42"
            },
            "result": {
              "status": "passed",
              "duration": 79055499
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 39,
            "name": "I am an authenticated admin API client",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:31"
            },
            "result": {
              "status": "passed",
              "duration": 1230899
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 40,
            "name": "I send a GET request with an existing book ID",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:65"
            },
            "result": {
              "status": "passed",
              "duration": 65961099
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 41,
            "name": "the response status should be 200",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:71"
            },
            "result": {
              "status": "passed",
              "duration": 258399
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 42,
            "name": "the response should contain the details of the book",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:82"
            },
            "result": {
              "status": "passed",
              "duration": 2188400
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "get-books;attempt-to-get-a-book-with-existing-id-as-user",
        "keyword": "Scenario",
        "line": 44,
        "name": "Attempt to GET a book with existing ID as user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 45,
            "name": "I create a new book with a random title",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:42"
            },
            "result": {
              "status": "passed",
              "duration": 68385999
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 46,
            "name": "I am an authenticated user API client",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:37"
            },
            "result": {
              "status": "passed",
              "duration": 823900
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 47,
            "name": "I send a GET request with an existing book ID",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:65"
            },
            "result": {
              "status": "passed",
              "duration": 64577400
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 48,
            "name": "the response status should be 200",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:71"
            },
            "result": {
              "status": "failed",
              "duration": 444499,
              "error_message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m403\u001b[39m\n    at Proxy.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\node_modules\\playwright\\lib\\matchers\\expect.js:227:37)\n    at validateResponseStatus (D:\\ITQA-API-UI-Testing\\api-testing\\src\\requests\\ValidateResponseStatus.ts:10:28)\n    at World.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\src\\tests\\steps\\getBooks.steps.ts:72:33)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 49,
            "name": "the response should contain the details of the book",
            "match": {
              "location": "src\\tests\\steps\\getBooks.steps.ts:82"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      }
    ],
    "id": "get-books",
    "line": 1,
    "keyword": "Feature",
    "name": "Get books",
    "tags": [],
    "uri": "src\\tests\\features\\getBooks.feature"
  },
  {
    "description": "",
    "elements": [
      {
        "description": "",
        "id": "create-a-book;attempt-to-create-a-book-with-valid-data-as-admin",
        "keyword": "Scenario",
        "line": 5,
        "name": "Attempt to CREATE a book with valid data as admin",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 6,
            "name": "I am an authenticated POST admin API client",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:13"
            },
            "result": {
              "status": "passed",
              "duration": 935099
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 7,
            "name": "I send a POST request to the \"books\" endpoint with valid book details",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:23"
            },
            "result": {
              "status": "passed",
              "duration": 69129800
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 8,
            "name": "the response status of POST should be either 201 or 208",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:115"
            },
            "result": {
              "status": "passed",
              "duration": 441300
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 9,
            "name": "the response should contain the created book details",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:119"
            },
            "result": {
              "status": "passed",
              "duration": 2617199
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "create-a-book;attempt-to-create-a-book-with-valid-data-as-user",
        "keyword": "Scenario",
        "line": 11,
        "name": "Attempt to CREATE a book with valid data as user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 12,
            "name": "I am an authenticated POST user API client",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:18"
            },
            "result": {
              "status": "passed",
              "duration": 892600
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 13,
            "name": "I send a POST request to the \"books\" endpoint with valid book details",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:23"
            },
            "result": {
              "status": "passed",
              "duration": 65702999
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 14,
            "name": "the response status of POST should be either 201 or 208",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:115"
            },
            "result": {
              "status": "passed",
              "duration": 192000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "the response should contain the created book details",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:119"
            },
            "result": {
              "status": "passed",
              "duration": 2501900
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "create-a-book;attempt-to-create-a-book-without-both-title-and-author-as-admin",
        "keyword": "Scenario",
        "line": 19,
        "name": "Attempt to CREATE a book without both title and author as admin",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 20,
            "name": "I am an authenticated POST admin API client",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:13"
            },
            "result": {
              "status": "passed",
              "duration": 882200
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 21,
            "name": "I send a POST request to the \"books\" endpoint without both title and author",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:35"
            },
            "result": {
              "status": "passed",
              "duration": 67144699
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 22,
            "name": "the response status of POST should be 400",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:132"
            },
            "result": {
              "status": "passed",
              "duration": 649999
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 23,
            "name": "the response should display the message \"Mandatory parameters should not be null\"",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:140"
            },
            "result": {
              "status": "passed",
              "duration": 1479999
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "create-a-book;attempt-to-create-a-book-without-both-title-and-author-as-user",
        "keyword": "Scenario",
        "line": 25,
        "name": "Attempt to CREATE a book without both title and author as user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 26,
            "name": "I am an authenticated POST user API client",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:18"
            },
            "result": {
              "status": "passed",
              "duration": 782700
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 27,
            "name": "I send a POST request to the \"books\" endpoint without both title and author",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:35"
            },
            "result": {
              "status": "passed",
              "duration": 67895399
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 28,
            "name": "the response status of POST should be 400",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:132"
            },
            "result": {
              "status": "passed",
              "duration": 236600
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 29,
            "name": "the response should display the message \"Mandatory parameters should not be null\"",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:140"
            },
            "result": {
              "status": "passed",
              "duration": 1414399
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "create-a-book;attempt-to-create-two-different-books-with-same-author-but-different-titles-as-admin",
        "keyword": "Scenario",
        "line": 34,
        "name": "Attempt to CREATE two different books with same author but different titles as admin",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 35,
            "name": "I am an authenticated POST admin API client",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:13"
            },
            "result": {
              "status": "passed",
              "duration": 944399
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 36,
            "name": "I send a POST request to the \"books\" endpoint with two different titles and the same author",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:47"
            },
            "result": {
              "status": "passed",
              "duration": 79347299
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 37,
            "name": "the response status of POST should be either 201 or 208",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:115"
            },
            "result": {
              "status": "passed",
              "duration": 188500
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 38,
            "name": "the response should contain the details of both books",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:123"
            },
            "result": {
              "status": "passed",
              "duration": 2258599
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "create-a-book;attempt-to-create-two-different-books-with-same-author-but-different-titles-as-user",
        "keyword": "Scenario",
        "line": 40,
        "name": "Attempt to CREATE two different books with same author but different titles as user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 41,
            "name": "I am an authenticated POST user API client",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:18"
            },
            "result": {
              "status": "passed",
              "duration": 4216199
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 42,
            "name": "I send a POST request to the \"books\" endpoint with two different titles and the same author",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:47"
            },
            "result": {
              "status": "passed",
              "duration": 79070899
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 43,
            "name": "the response status of POST should be either 201 or 208",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:115"
            },
            "result": {
              "status": "passed",
              "duration": 195300
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 44,
            "name": "the response should contain the details of both books",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:123"
            },
            "result": {
              "status": "passed",
              "duration": 2571299
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "create-a-book;attempt-to-create-a-book-with-empty-title-as-admin",
        "keyword": "Scenario",
        "line": 49,
        "name": "Attempt to CREATE a book with empty title as admin",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 50,
            "name": "I am an authenticated POST admin API client",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:13"
            },
            "result": {
              "status": "passed",
              "duration": 823099
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 51,
            "name": "I send a POST request to the \"books\" endpoint with empty title",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:60"
            },
            "result": {
              "status": "passed",
              "duration": 65084799
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 52,
            "name": "the response status of POST should be 400",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:132"
            },
            "result": {
              "status": "failed",
              "duration": 335999,
              "error_message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m208\u001b[39m\n    at Proxy.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\node_modules\\playwright\\lib\\matchers\\expect.js:227:37)\n    at validateResponseStatus (D:\\ITQA-API-UI-Testing\\api-testing\\src\\requests\\ValidateResponseStatus.ts:10:28)\n    at World.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\src\\tests\\steps\\postBook.steps.ts:133:33)"
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "create-a-book;attempt-to-create-a-book-with-empty-title-as-user",
        "keyword": "Scenario",
        "line": 54,
        "name": "Attempt to CREATE a book with empty title as user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 55,
            "name": "I am an authenticated POST user API client",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:18"
            },
            "result": {
              "status": "passed",
              "duration": 778000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 56,
            "name": "I send a POST request to the \"books\" endpoint with empty title",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:60"
            },
            "result": {
              "status": "passed",
              "duration": 67412699
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 57,
            "name": "the response status of POST should be 400",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:132"
            },
            "result": {
              "status": "failed",
              "duration": 577800,
              "error_message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m208\u001b[39m\n    at Proxy.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\node_modules\\playwright\\lib\\matchers\\expect.js:227:37)\n    at validateResponseStatus (D:\\ITQA-API-UI-Testing\\api-testing\\src\\requests\\ValidateResponseStatus.ts:10:28)\n    at World.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\src\\tests\\steps\\postBook.steps.ts:133:33)"
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "create-a-book;attempt-to-create-two-different-books-with-same-title-but-different-authors-as-admin",
        "keyword": "Scenario",
        "line": 62,
        "name": "Attempt to CREATE two different books with same title but different authors as admin",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 63,
            "name": "I am an authenticated POST admin API client",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:13"
            },
            "result": {
              "status": "passed",
              "duration": 1147500
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 64,
            "name": "I send 2 POST requests to the \"books\" endpoint with the same title but different authors",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:72"
            },
            "result": {
              "status": "passed",
              "duration": 71885699
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 65,
            "name": "the response status of POST should be 201",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:132"
            },
            "result": {
              "status": "failed",
              "duration": 504200,
              "error_message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m208\u001b[39m\n    at Proxy.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\node_modules\\playwright\\lib\\matchers\\expect.js:227:37)\n    at validateResponseStatus (D:\\ITQA-API-UI-Testing\\api-testing\\src\\requests\\ValidateResponseStatus.ts:10:28)\n    at World.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\src\\tests\\steps\\postBook.steps.ts:133:33)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 66,
            "name": "the response should contain the details of both books with the same title but different authors",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:127"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "create-a-book;attempt-to-create-two-different-books-with-same-title-but-different-authors-as-user",
        "keyword": "Scenario",
        "line": 68,
        "name": "Attempt to CREATE two different books with same title but different authors as user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 69,
            "name": "I am an authenticated POST user API client",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:18"
            },
            "result": {
              "status": "passed",
              "duration": 803300
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 70,
            "name": "I send 2 POST requests to the \"books\" endpoint with the same title but different authors",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:72"
            },
            "result": {
              "status": "passed",
              "duration": 71162599
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 71,
            "name": "the response status of POST should be 201",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:132"
            },
            "result": {
              "status": "failed",
              "duration": 448500,
              "error_message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m201\u001b[39m\nReceived: \u001b[31m208\u001b[39m\n    at Proxy.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\node_modules\\playwright\\lib\\matchers\\expect.js:227:37)\n    at validateResponseStatus (D:\\ITQA-API-UI-Testing\\api-testing\\src\\requests\\ValidateResponseStatus.ts:10:28)\n    at World.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\src\\tests\\steps\\postBook.steps.ts:133:33)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 72,
            "name": "the response should contain the details of both books with the same title but different authors",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:127"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "create-a-book;attempt-to-create-a-book-without-title-as-admin",
        "keyword": "Scenario",
        "line": 77,
        "name": "Attempt to CREATE a book without title as admin",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 78,
            "name": "I am an authenticated POST admin API client",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:13"
            },
            "result": {
              "status": "passed",
              "duration": 962700
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 79,
            "name": "I send a POST request to the \"books\" endpoint without title",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:90"
            },
            "result": {
              "status": "passed",
              "duration": 144928899
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 80,
            "name": "the response status of POST should be 400",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:132"
            },
            "result": {
              "status": "failed",
              "duration": 328299,
              "error_message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m201\u001b[39m\n    at Proxy.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\node_modules\\playwright\\lib\\matchers\\expect.js:227:37)\n    at validateResponseStatus (D:\\ITQA-API-UI-Testing\\api-testing\\src\\requests\\ValidateResponseStatus.ts:10:28)\n    at World.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\src\\tests\\steps\\postBook.steps.ts:133:33)"
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "create-a-book;attempt-to-create-a-book-without-title-as-user",
        "keyword": "Scenario",
        "line": 82,
        "name": "Attempt to CREATE a book without title as user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 83,
            "name": "I am an authenticated POST user API client",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:18"
            },
            "result": {
              "status": "passed",
              "duration": 789600
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 84,
            "name": "I send a POST request to the \"books\" endpoint without title",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:90"
            },
            "result": {
              "status": "passed",
              "duration": 131447700
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 85,
            "name": "the response status of POST should be 400",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:132"
            },
            "result": {
              "status": "failed",
              "duration": 617999,
              "error_message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m201\u001b[39m\n    at Proxy.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\node_modules\\playwright\\lib\\matchers\\expect.js:227:37)\n    at validateResponseStatus (D:\\ITQA-API-UI-Testing\\api-testing\\src\\requests\\ValidateResponseStatus.ts:10:28)\n    at World.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\src\\tests\\steps\\postBook.steps.ts:133:33)"
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "create-a-book;attempt-to-create-a-book-without-author-as-admin",
        "keyword": "Scenario",
        "line": 90,
        "name": "Attempt to CREATE a book without author as admin",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 91,
            "name": "I am an authenticated POST admin API client",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:13"
            },
            "result": {
              "status": "passed",
              "duration": 789899
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 92,
            "name": "I send a POST request to the \"books\" endpoint with title and without author",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:102"
            },
            "result": {
              "status": "passed",
              "duration": 66051599
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 93,
            "name": "the response status of POST should be 201",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:132"
            },
            "result": {
              "status": "passed",
              "duration": 233799
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 94,
            "name": "the response should contain the created book details with title and null author",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:136"
            },
            "result": {
              "status": "passed",
              "duration": 1752799
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "create-a-book;attempt-to-create-a-book-without-author-as-user",
        "keyword": "Scenario",
        "line": 96,
        "name": "Attempt to CREATE a book without author as user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 97,
            "name": "I am an authenticated POST user API client",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:18"
            },
            "result": {
              "status": "passed",
              "duration": 784200
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 98,
            "name": "I send a POST request to the \"books\" endpoint with title and without author",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:102"
            },
            "result": {
              "status": "passed",
              "duration": 66377499
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 99,
            "name": "the response status of POST should be 201",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:132"
            },
            "result": {
              "status": "passed",
              "duration": 630000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 100,
            "name": "the response should contain the created book details with title and null author",
            "match": {
              "location": "src\\tests\\steps\\postBook.steps.ts:136"
            },
            "result": {
              "status": "passed",
              "duration": 1437500
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      }
    ],
    "id": "create-a-book",
    "line": 1,
    "keyword": "Feature",
    "name": "Create a book",
    "tags": [],
    "uri": "src\\tests\\features\\postBook.feature"
  },
  {
    "description": "",
    "elements": [
      {
        "description": "",
        "id": "update-a-book;attempt-to-update-an-exisiting-book-with-different-author-as-admin",
        "keyword": "Scenario",
        "line": 5,
        "name": "Attempt to UPDATE an exisiting book with different author as admin",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 6,
            "name": "I create a new book entry with a random title",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:15"
            },
            "result": {
              "status": "passed",
              "duration": 67362500
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "I am an authenticated PUT admin API client",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:21"
            },
            "result": {
              "status": "passed",
              "duration": 4776200
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 8,
            "name": "I send a PUT request to the endpoint with the new author \"John Doe\"",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:31"
            },
            "result": {
              "status": "passed",
              "duration": 71244499
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 9,
            "name": "the response status of PUT should be 200",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:100"
            },
            "result": {
              "status": "failed",
              "duration": 536500,
              "error_message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m208\u001b[39m\n    at Proxy.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\node_modules\\playwright\\lib\\matchers\\expect.js:227:37)\n    at validateResponseStatus (D:\\ITQA-API-UI-Testing\\api-testing\\src\\requests\\ValidateResponseStatus.ts:10:28)\n    at World.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\src\\tests\\steps\\updateBooks.steps.ts:101:33)"
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 10,
            "name": "the response should contain the updated book details with author \"John Doe\"",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:88"
            },
            "result": {
              "status": "skipped",
              "duration": 0
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "update-a-book;attempt-to-update-an-exisiting-book-with-different-author-as-user",
        "keyword": "Scenario",
        "line": 12,
        "name": "Attempt to UPDATE an exisiting book with different author as user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 13,
            "name": "I create a new book entry with a random title",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:15"
            },
            "result": {
              "status": "passed",
              "duration": 70620899
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 14,
            "name": "I am an authenticated PUT user API client",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:26"
            },
            "result": {
              "status": "passed",
              "duration": 1016000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 15,
            "name": "I send a PUT request to the endpoint with the new author \"Jane Smith\"",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:31"
            },
            "result": {
              "status": "passed",
              "duration": 65617500
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 16,
            "name": "the response status of PUT should be 403",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:100"
            },
            "result": {
              "status": "passed",
              "duration": 255700
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "update-a-book;attempt-to-update-an-exisiting-book-with-different-titles-but-without-author-as-admin",
        "keyword": "Scenario",
        "line": 21,
        "name": "Attempt to UPDATE an exisiting book with different titles but without author as admin",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 22,
            "name": "I create a new book entry with a random title",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:15"
            },
            "result": {
              "status": "passed",
              "duration": 69881300
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 23,
            "name": "I am an authenticated PUT admin API client",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:21"
            },
            "result": {
              "status": "passed",
              "duration": 716199
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 24,
            "name": "I send a PUT request with different title and without author field",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:40"
            },
            "result": {
              "status": "passed",
              "duration": 67170999
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 25,
            "name": "the response status of PUT should be 200",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:100"
            },
            "result": {
              "status": "failed",
              "duration": 332400,
              "error_message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at Proxy.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\node_modules\\playwright\\lib\\matchers\\expect.js:227:37)\n    at validateResponseStatus (D:\\ITQA-API-UI-Testing\\api-testing\\src\\requests\\ValidateResponseStatus.ts:10:28)\n    at World.<anonymous> (D:\\ITQA-API-UI-Testing\\api-testing\\src\\tests\\steps\\updateBooks.steps.ts:101:33)"
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "update-a-book;attempt-to-update-an-exisiting-book-with-different-titles-but-without-author-as-user",
        "keyword": "Scenario",
        "line": 28,
        "name": "Attempt to UPDATE an exisiting book with different titles but without author as user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 29,
            "name": "I create a new book entry with a random title",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:15"
            },
            "result": {
              "status": "passed",
              "duration": 68906099
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 30,
            "name": "I am an authenticated PUT user API client",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:26"
            },
            "result": {
              "status": "passed",
              "duration": 775800
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 31,
            "name": "I send a PUT request with different title and without author field",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:40"
            },
            "result": {
              "status": "passed",
              "duration": 65014099
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 32,
            "name": "the response status of PUT should be 403",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:100"
            },
            "result": {
              "status": "passed",
              "duration": 230599
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 33,
            "name": "the response should be \"User is not permitted.\"",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:105"
            },
            "result": {
              "status": "passed",
              "duration": 2122800
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "update-a-book;attempt-to-update-a-non-exisiting-book-as-admin",
        "keyword": "Scenario",
        "line": 38,
        "name": "Attempt to UPDATE a non-exisiting book as admin",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 39,
            "name": "I am an authenticated PUT admin API client",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:21"
            },
            "result": {
              "status": "passed",
              "duration": 695999
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 40,
            "name": "I send a PUT request to the endpoint with the non-existing book id",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:50"
            },
            "result": {
              "status": "passed",
              "duration": 65641400
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 41,
            "name": "the response status of PUT should be 404",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:100"
            },
            "result": {
              "status": "passed",
              "duration": 291499
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 42,
            "name": "the response should display an error message \"Book not found\"",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:124"
            },
            "result": {
              "status": "passed",
              "duration": 1145599
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "update-a-book;attempt-to-update-a-non-exisiting-book-as-user",
        "keyword": "Scenario",
        "line": 44,
        "name": "Attempt to UPDATE a non-exisiting book as user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 45,
            "name": "I am an authenticated PUT user API client",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:26"
            },
            "result": {
              "status": "passed",
              "duration": 717800
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 46,
            "name": "I send a PUT request to the endpoint with the non-existing book id",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:50"
            },
            "result": {
              "status": "passed",
              "duration": 64652199
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 47,
            "name": "the response status of PUT should be 403",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:100"
            },
            "result": {
              "status": "passed",
              "duration": 241399
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 48,
            "name": "the response should display an error message \"User is not permitted.\"",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:124"
            },
            "result": {
              "status": "passed",
              "duration": 3250799
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "update-a-book;attempt-to-update-an-exisiting-book-with-a-new-title-as-admin",
        "keyword": "Scenario",
        "line": 53,
        "name": "Attempt to UPDATE an exisiting book with a new title as admin",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 54,
            "name": "I create a new book entry with a random title",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:15"
            },
            "result": {
              "status": "passed",
              "duration": 69880599
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 55,
            "name": "I am an authenticated PUT admin API client",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:21"
            },
            "result": {
              "status": "passed",
              "duration": 960000
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 56,
            "name": "I send a PUT request to the endpoint with a new title",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:59"
            },
            "result": {
              "status": "passed",
              "duration": 66713900
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 57,
            "name": "the response status of PUT should be 200",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:100"
            },
            "result": {
              "status": "passed",
              "duration": 411399
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 58,
            "name": "the response should contain the updated book details with a new title and the same author",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:94"
            },
            "result": {
              "status": "passed",
              "duration": 1246199
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "update-a-book;attempt-to-update-an-exisiting-book-with-a-new-title-as-user",
        "keyword": "Scenario",
        "line": 60,
        "name": "Attempt to UPDATE an exisiting book with a new title as user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 61,
            "name": "I create a new book entry with a random title",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:15"
            },
            "result": {
              "status": "passed",
              "duration": 68431599
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 62,
            "name": "I am an authenticated PUT user API client",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:26"
            },
            "result": {
              "status": "passed",
              "duration": 776100
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 63,
            "name": "I send a PUT request to the endpoint with a new title",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:59"
            },
            "result": {
              "status": "passed",
              "duration": 65780999
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 64,
            "name": "the response status of PUT should be 403",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:100"
            },
            "result": {
              "status": "passed",
              "duration": 231499
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 65,
            "name": "the response should display an error message \"User is not permitted.\"",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:124"
            },
            "result": {
              "status": "passed",
              "duration": 1078000
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "update-a-book;attempt-to-update-existing-book-without-both-title-and-author-as-admin",
        "keyword": "Scenario",
        "line": 70,
        "name": "Attempt to UPDATE existing book without both title and author as admin",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 71,
            "name": "I create a new book entry with a random title",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:15"
            },
            "result": {
              "status": "passed",
              "duration": 70948600
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 72,
            "name": "I am an authenticated PUT admin API client",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:21"
            },
            "result": {
              "status": "passed",
              "duration": 1143600
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 73,
            "name": "I send a PUT request to the endpoint without title and author",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:69"
            },
            "result": {
              "status": "passed",
              "duration": 65066199
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 74,
            "name": "the response status of PUT should be 400",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:100"
            },
            "result": {
              "status": "passed",
              "duration": 332699
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 75,
            "name": "the response should display an error message \"Mandatory parameters should not be null\"",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:124"
            },
            "result": {
              "status": "passed",
              "duration": 1104900
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "update-a-book;attempt-to-update-existing-book-without-both-title-and-author-as-user",
        "keyword": "Scenario",
        "line": 77,
        "name": "Attempt to UPDATE existing book without both title and author as user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 78,
            "name": "I create a new book entry with a random title",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:15"
            },
            "result": {
              "status": "passed",
              "duration": 74816800
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 79,
            "name": "I am an authenticated PUT user API client",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:26"
            },
            "result": {
              "status": "passed",
              "duration": 820600
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 80,
            "name": "I send a PUT request to the endpoint without title and author",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:69"
            },
            "result": {
              "status": "passed",
              "duration": 63099599
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 81,
            "name": "the response status of PUT should be 403",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:100"
            },
            "result": {
              "status": "passed",
              "duration": 333099
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 82,
            "name": "the response should display an error message \"User is not permitted.\"",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:124"
            },
            "result": {
              "status": "passed",
              "duration": 1096900
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "update-a-book;attempt-to-update-an-existing-book-without-title-as-admin",
        "keyword": "Scenario",
        "line": 87,
        "name": "Attempt to UPDATE an existing book without title as admin",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 88,
            "name": "I create a new book entry with a random title",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:15"
            },
            "result": {
              "status": "passed",
              "duration": 74581199
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 89,
            "name": "I am an authenticated PUT admin API client",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:21"
            },
            "result": {
              "status": "passed",
              "duration": 794499
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 90,
            "name": "I send a PUT request to the \"books\" endpoint to update an existing book without a title",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:78"
            },
            "result": {
              "status": "passed",
              "duration": 64984899
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 91,
            "name": "the response status of PUT should be 400",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:100"
            },
            "result": {
              "status": "passed",
              "duration": 246299
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "update-a-book;attempt-to-update-an-existing-book-without-title-as-user",
        "keyword": "Scenario",
        "line": 93,
        "name": "Attempt to UPDATE an existing book without title as user",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 94,
            "name": "I create a new book entry with a random title",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:15"
            },
            "result": {
              "status": "passed",
              "duration": 68816300
            }
          },
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 95,
            "name": "I am an authenticated PUT user API client",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:26"
            },
            "result": {
              "status": "passed",
              "duration": 944700
            }
          },
          {
            "arguments": [],
            "keyword": "When ",
            "line": 96,
            "name": "I send a PUT request to the \"books\" endpoint to update an existing book without a title",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:78"
            },
            "result": {
              "status": "passed",
              "duration": 64221700
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 97,
            "name": "the response status of PUT should be 403",
            "match": {
              "location": "src\\tests\\steps\\updateBooks.steps.ts:100"
            },
            "result": {
              "status": "passed",
              "duration": 250000
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      }
    ],
    "id": "update-a-book",
    "line": 1,
    "keyword": "Feature",
    "name": "Update a book",
    "tags": [],
    "uri": "src\\tests\\features\\updateBooks.feature"
  }
]